#! /usr/bin/env ruby

require 'optparse'
require Dir.home + '/scripts/find_and_replace/find_and_replace'

if ARGV.empty?
  puts <<-HELP

FInd and REplace

usage: fire <find pattern> <replace pattern> <OPT: file pattern>

fire uses ruby's regexp gsub to match and replace. Wrap patterns in strings for
anything more complex than alphanumeric characters.

Examples:

Replace all occurrences of hello with goodbye:

  fire hello goodbye

Replace all occurrences of hello with goodbye that occur in .yml files.

  fire hello goodbye

Replace foo with bar only if it is at start of the line in default files:

  fire '$foo' bar

  HELP
  exit
end

options = Hash.new
options[:regexp] = 0

OptionParser.new do |opts|
  c_desc = "change all references to a class in code and paths"
  opts.on("-c", "--class_name", c_desc) do
    options[:class_name] = true
  end
  opts.on("-m", "--multiline") do
    options[:regexp] += 4
  end
end.parse!

find = Regexp.new(ARGV.shift, options[:regexp])
replace = ARGV.shift.gsub("//", "/")

paths = ARGV

if options[:class_name]
  FindAndReplacePath.new(find, replace, paths).call
else
  FindAndReplaceText.new(find, replace, paths).call
end
